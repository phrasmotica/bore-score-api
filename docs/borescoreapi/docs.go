// Code generated by swaggo/swag. DO NOT EDIT.

package borescoreapi

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/memberships/{username}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Gets a user's group memberships",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Gets a user's group memberships",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The user's username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.GroupMembership"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/summary": {
            "get": {
                "description": "Gets a summary of the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Summary"
                ],
                "summary": "Gets a summary of the database",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/data.Summary"
                        }
                    }
                }
            }
        },
        "/users/{username}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Gets a user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Gets a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The user's username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.GetUserResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "data.Summary": {
            "type": "object",
            "properties": {
                "gameCount": {
                    "type": "integer"
                },
                "groupCount": {
                    "type": "integer"
                },
                "playerCount": {
                    "type": "integer"
                },
                "resultCount": {
                    "type": "integer"
                }
            }
        },
        "models.GroupMembership": {
            "type": "object",
            "properties": {
                "groupId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "invitationId": {
                    "type": "string"
                },
                "timeCreated": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "routes.GetUserResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1.0",
	Host:             "localhost:8000",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "BoreScore API",
	Description:      "This is the BoreScore API.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
